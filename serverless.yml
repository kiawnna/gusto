service: gustov2
# TODO: ACCOUNT ID NEEDS TO BE ENV VARIABLE--CURRENTLY HARDCODED IN BUCKETNAME.
provider:
  name: aws
  runtime: python3.8
  region: us-east-1
  environment:
    BUCKET: ${self:resources.Resources.GustoBucket.Properties.BucketName}
    SECRET_ID: gusto_auth
#    ACCOUNT_ID: 266245855374
  iamRoleStatements:
    - Effect: Allow
      Action:
        - secretsmanager:GetSecretValue
        - secretsmanager:PutSecretValue
        - s3:PutObject
        - s3:CreateBucket
      Resource: '*'

package:
  individually: true
  exclude:
    - app/functions
    - node_modules/**
    - venv/**

plugins:
  - serverless-python-requirements

resources:
  Resources:
    GustoBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: gusto-payrolls-266245855374
        PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          BlockPublicPolicy: true
          IgnorePublicAcls: true
          RestrictPublicBuckets: true



functions:
  # TODO: Check and see of auth is handled for create_company.
  create_company:
    handler: app/functions/create_company.main
    events:
      - http:
          path: /create_company
          method: post
    package:
      include:
        - app/functions/create_copmany.py
        - app/gusto_auth.py

  companies:
    handler: app/functions/companies.main
    events:
      - http:
          path: /companies
          method: post
    package:
      include:
        - app/functions/companies.py
        - app/gusto_auth.py

  initial_auth:
    handler: app/functions/initial_auth.main
    events:
      - http:
          path: /initial_auth
          method: get
    package:
      include:
        - app/functions/initial_auth.py

  payrolls:
    handler: app/functions/payrolls.main
    events:
      - http:
          path: /payrolls
          method: post
    package:
      include:
        - app/functions/payrolls.py
        - app/gusto_auth.py